class Solution {
public:
    vector<vector<int>> queensAttacktheKing(vector<vector<int>>& queens, vector<int>& king) 
    {
        vector<vector<int>> res;
        for(int i=king[1]-1; i>=0; i--)
        {
            vector<int> queen;
            queen.push_back(king[0]);
            queen.push_back(i);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({king[0],i});
                break;
            }
        }
          for(int i=king[1]+1; i<=8; i++)
        {   
            vector<int> queen;
            queen.push_back(king[0]);
            queen.push_back(i);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({king[0],i});
                break;
            }
        }
        
        for(int i = king[0]-1; i>=0; i--)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(king[1]);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,king[1]});
                break;
            }
            
        }
        
        for(int i = king[0]+1; i<=8; i++)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(king[1]);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,king[1]});
                break;
            }
            
        }
        for(int i = king[0]-1,j = king[1]-1; i>=0 && j>=0; i-- && j--)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(j);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,j});
                break;
            }
        }
        
        for(int i = king[0]+1,j = king[1]+1; i<=8 && j<=8; i++ && j++)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(j);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,j});
                break;
            }
        }
        
        for(int i = king[0]-1,j = king[1]+1; i>=0 && j<=8; i-- && j++)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(j);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,j});
                break;
            }
        }
        
         for(int i = king[0]+1,j = king[1]-1; i<=8 && j>=0; i++ && j--)
        {
            vector<int> queen;
            queen.push_back(i);
            queen.push_back(j);
            if(find(queens.begin(),queens.end(),queen) != queens.end())
            {
                res.push_back({i,j});
                break;
            }
        }
        return res;
        
    }
};